apiVersion: v1
kind: ConfigMap
metadata:
  name: hassconfigmap
data:
  configuration.yaml: |
  {{`
    #Configure a default setup of Home Assistant (frontend, api, etc)
    default_config:
    # recorder:
    #   db_url: "postgresql://homeassistant:yourpassword@localhost:5432/homeassistant_db"
    #   db_retry_wait: 3 # Wait 15 seconds before retrying
    http:
      use_x_forwarded_for: true
      trusted_proxies:
        - 127.0.0.1
        - ::1
        - 10.42.0.0/24
        - 10.42.1.0/24
        - 10.42.6.0/24
    # Text to speech
    tts:
      - platform: google_translate
    template:
    - sensor:
      - name: "Electricity Cost"
        unique_id: electricity_cost
        device_class: monetary
        unit_of_measurement: "kr/kWh"
        state: >
          {{ 1.25 * (float(states('sensor.eloverblik_tariff_sum'), 0) + float(states('sensor.nordpool_kwh_dk1_dkk_3_10_0'), 0)) }}
        attributes:
          today: >
            {% if state_attr('sensor.nordpool_kwh_dk1_dkk_3_10_0', 'today') %}
              {% set ns = namespace (prices=[]) %}
              {% for h in range(24) %}
                {% set ns.prices = ns.prices + [(1.25 * (float(state_attr('sensor.nordpool_kwh_dk1_dkk_3_10_0', 'today')[h], 0))) | round(5)] %}
              {% endfor %}
              {{ ns.prices }}
            {% endif %}
          tomorrow: >
            {% if state_attr('sensor.nordpool_kwh_dk1_dkk_3_10_0', 'tomorrow') %}
              {% set ns = namespace (prices=[]) %}
              {% for h in range(24) %}
                {% set ns.prices = ns.prices + [(1.25 * (float(state_attr('sensor.nordpool_kwh_dk1_dkk_3_10_0', 'tomorrow')[h], 0))) | round(5)] %}
              {% endfor %}
              {{ ns.prices }}
            {% endif %}
      - name: "Eloverblik Time Series"
        unique_id: eloverblik_series
        device_class: energy
        unit_of_measurement: "kWh"
        state: 0
        attributes:
          series: >
            {% set ns = namespace (usages=[]) %}

            {% for h in range(24) %}
              {% set hourstr = h | string %}
              {% set nexthourstr = (h+1) | string %}
              {% set ns.usages = ns.usages + [float(states('sensor.eloverblik_energy_'+hourstr+'_'+nexthourstr),0)] %}
            {% endfor %}
            {{ns.usages}}
    sensor:
      - platform: statistics
        entity_id: sensor.eloverblik_energy_total
        name: Eloverblik Monthly Statistics
        sampling_size: 50
        state_characteristic: mean
        max_age:
            days: 30
      - platform: rest
        name: Frame Counter
        resource_template: http://192.168.87.129:5000/api/progress?filename={{ states('sensor.now_playing') }}
        value_template: "{{ value_json.currentFrame }}"
        unit_of_measurement: "Frames"
        scan_interval: 120
      - platform: rest
        name: Now Playing
        resource: http://192.168.87.129:5000/api/nowPlaying
        value_template: "{{ value_json.msg }}"
        scan_interval: 600
      - platform: rest
        name: Total Frames
        resource_template: http://192.168.87.129:5000/api/progress?filename={{ states('sensor.now_playing') }}
        value_template: "{{ value_json.totalframes }}"
        scan_interval: 120
      - platform: rest
        name: Most Optimal Dishwasher Setting
        resource_template: https://optimalpowertimecalculator.hosrasmus.hopto.org/api/next-optimal-hour?numHoursToForecast=2h45m
        value_template: "{{ value_json.price.fromTs }}"
        json_attributes_path: "$.price"
        json_attributes:
          - "price"
          - "suboptimalPriceMultiplier"
          - "fromTs"
          - "toTs"
        scan_interval: 120
      - platform: rest
        name: Most Optimal Washing Machine Setting
        resource_template: https://optimalpowertimecalculator.hosrasmus.hopto.org/api/next-optimal-hour?numHoursToForecast=1h6m
        value_template: "{{ value_json.price.fromTs }}"
        json_attributes_path: "$.price"
        json_attributes:
          - "price"
          - "suboptimalPriceMultiplier"
          - "fromTs"
          - "toTs"
        scan_interval: 120
      - platform: rest
        name: How Much More expensive is the Dishwasher Now?
        resource_template: https://optimalpowertimecalculator.hosrasmus.hopto.org/api/next-optimal-hour?numHoursToForecast=2h45m
        value_template: "{{ value_json.price.suboptimalPriceMultiplier }}"
        scan_interval: 120
      - platform: rest
        name: How Much More expensive is the Washing Machine Now?
        resource_template: https://optimalpowertimecalculator.hosrasmus.hopto.org/api/next-optimal-hour?numHoursToForecast=1h6m
        value_template: "{{ value_json.price.suboptimalPriceMultiplier }}"
        scan_interval: 120
    group: !include groups.yaml
    automation: !include automations.yaml
    script: !include scripts.yaml
    scene: !include scenes.yaml
    shell_command: !include shell_commands.yaml
    switch:
      - platform: wake_on_lan
        name: RemotePC
        broadcast_port: 9
        mac: d4:3d:7e:19:f4:fa
        broadcast_address: 192.168.87.14
        turn_off:
          service: shell_command.turn_off_remote_pc
    
    logger:
      default: info
  `}}
