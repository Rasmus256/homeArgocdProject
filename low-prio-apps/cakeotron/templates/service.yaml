apiVersion: v1
kind: Service
metadata:
  namespace: cake
  labels:
    io.kompose.service: cakeotron
  name: cakeotron
spec:
  loadBalancerSourceRanges:
    - "194.239.0.0/16"
  type: LoadBalancer
  ports:
    - name: "cake"
      port: 80
      targetPort: 80
  selector:
    io.kompose.service: cakeotron
status:
  loadBalancer: {}

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: cake-ingress
  namespace: cake
  annotations:
    acme.cert-manager.io/http01-ingress-class: traefik
    cert-manager.io/cluster-issuer: letsencrypt-prod
    acme.cert-manager.io/http01-edit-in-place: "true"
spec:
  rules:
  - host: {{ .Values.baseurl}}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: cakeotron
            port: 
              name: "cake"
  tls:
  - secretName: cakecert-wild-4-tls
    hosts:
      - {{ .Values.baseurl}}

---

apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: cake-cert
  namespace: cake
spec:
  # Secret names are always required.
  secretName: cakecert-wild-4-tls
  duration: 2160h0m0s
  renewBefore: 360h0m0s # 15d
  usages:
    - server auth
    - client auth
  # At least one of a DNS Name, URI, or IP address is required.
  dnsNames:
    - {{ .Values.baseurl}}
  # Issuer references are always required.
  issuerRef:
    name: letsencrypt-prod
    # We can reference ClusterIssuers by changing the kind here.
    # The default value is Issuer (i.e. a locally namespaced Issuer)
    kind: ClusterIssuer
